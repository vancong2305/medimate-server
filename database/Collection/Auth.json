{
	"info": {
		"_postman_id": "bd737e24-41c6-46bd-897f-77fbf2d95f80",
		"name": "Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "33593226-bd737e24-41c6-46bd-897f-77fbf2d95f80"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "efe6b918-578e-45f0-9a95-db6fc715a408",
						"exec": [
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - accessToken and refreshToken\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.accessToken).to.exist;",
							"    pm.expect(responseData.refreshToken).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"AccessToken is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.accessToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"AccessToken should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"RefreshToken is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.refreshToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "9d086142-8df3-4d42-97ab-2ae153e56cd2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"phone\": \"0192922\",\r\n    \"password\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"auth",
						"login"
					]
				},
				"description": "This API endpoint is used to authenticate and login a user. When making a POST request to `http://localhost:8080/api/auth/login`, the request should include a JSON payload in the raw request body type with the user's phone number and password.\n\n### Request Body\n\n- `phone`: (string) The user's phone number.\n- `password`: (string) The user's password.\n    \n\nUpon successful execution, the API will respond with a status code of 200 and a JSON object in the response body with the following keys:\n\n- `accessToken`: A token for accessing protected resources.\n- `refreshToken`: A token for refreshing the access token.\n    \n\nThe Content-Type of the response is `application/json`."
			},
			"response": []
		},
		{
			"name": "register",
			"id": "06f8b147-0e04-4e7e-9e7d-09acbaece2f4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"phone\": \"01929223\",\r\n    \"password\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout",
			"id": "eddee5ae-dce8-48bb-8003-ebef495c62e2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ7XCJpZFwiOjE2LFwiaWRSb2xlXCI6MSxcInBob25lXCI6XCIwMTkyOTIyXCIsXCJwYXNzd29yZFwiOlwiMVwiLFwicmFua1wiOlwixJDhu5NuZ1wiLFwicG9pbnRcIjowLFwic3RhdHVzXCI6MX0iLCJpYXQiOjE3MTIzODQzNzcsImV4cCI6MTcxMjQ3MDc3N30.np0gTojl6NF2UXKgsSTc5YLBFRTscQFb6iGZrDGFf70",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"phone\": \"0192922\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/auth/logout",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "refresh",
			"id": "94231a5d-df44-43db-84e6-2f85f69ea853",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ7XCJpZFwiOjE2LFwiaWRSb2xlXCI6MSxcInBob25lXCI6XCIwMTkyOTIyXCIsXCJwYXNzd29yZFwiOlwiMVwiLFwicmFua1wiOlwixJDhu5NuZ1wiLFwicG9pbnRcIjowLFwic3RhdHVzXCI6MX0iLCJpYXQiOjE3MTIzMzkyNDgsImV4cCI6MTcxMjQyNTY0OH0.uGH2pwGobCQj7WZ2jeAUtPUjyPqzHXUsMreNYCxMfKY",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"accessToken\" : \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ7XCJpZFwiOjE2LFwiaWRSb2xlXCI6MSxcInBob25lXCI6XCIwMTkyOTIyXCIsXCJwYXNzd29yZFwiOlwiMVwiLFwicmFua1wiOlwixJDhu5NuZ1wiLFwicG9pbnRcIjowLFwic3RhdHVzXCI6MX0iLCJpYXQiOjE3MTIzMzgwMzMsImV4cCI6MTcxMjQyNDQzM30.c00cSBlBAjUcTCHN8qls3_41lNYFEM2-GIzt4iE7mRo\",\r\n    \"refreshToken\" : \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ7XCJpZFwiOjE2LFwiaWRSb2xlXCI6MSxcInBob25lXCI6XCIwMTkyOTIyXCIsXCJwYXNzd29yZFwiOlwiMVwiLFwicmFua1wiOlwixJDhu5NuZ1wiLFwicG9pbnRcIjowLFwic3RhdHVzXCI6MX0iLCJpYXQiOjE3MTIzMzkyNDgsImV4cCI6MTcxMjk0NDA0OH0.mTnj-2FjsP4MN5EK8MtcxHEG4TPj3Us3SxFSVa__f6c\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/auth/refresh",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"refresh"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6d7b3c05-b8a4-43d2-9ca2-51199ed6b38e",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d51766db-e18a-40c1-ab15-001e6055e4d7",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e4eb3320-df51-4163-b411-0d6463a92438",
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}